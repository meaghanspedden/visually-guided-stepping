IronPython 2.7.6.3 (2.7.6.3) on .NET 4.0.30319.42000 (32-bit)
Type "help", "copyright", "credits" or "license" for more information.
>>> import sys
>>> if not '64-bit' in sys.version:
...     raise SystemError("error")
...
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
SystemError: error

>>> import clr
>>> from os import path
>>> dll_path=r'C:\Program Files (x86)\OptiTrack\Motive\assemblies\win32\NMotive.dll'
>>> clr.AddReferenceTofileAndPath(dll_path)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'module' object has no attribute 'AddReferenceTofileAndPath'

>>> clr.AddReferenceToFileAndPath(dll_path)
>>> import NMotive
>>> import itertools
>>> NMotive.LengthUnits
<type 'LengthUnits'>
>>> NMotive.LengthUnits.Units_Meters
NMotive.LengthUnits.Units_Meters
>>> class Take(object)
  File "<stdin>", line 1
    class Take(object)

                      ^
SyntaxError: unexpected token '<newline>'

>>> class Take(object)
  File "<stdin>", line 1
    class Take(object)

                      ^
SyntaxError: unexpected token '<newline>'

>>> class Take(object):
...     def_init_(self,fname):
  File "<stdin>", line 2
        def_init_(self,fname):

                             ^
SyntaxError: unexpected token ':'

>>> def_init_(self,fname):
  File "<stdin>", line 1
    def_init_(self,fname):

                         ^
SyntaxError: unexpected token ':'

>>> takename='Take 2020-08-20 02.58.20 PM.tak'
>>> testtake=NMotive.Take(takename)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IOError: [Errno 2] Take file does not exist.

>>> takename='\\a00519.science.domain\pfk270\Documents\Session 2020-09-04\Take 2020-09-04 01.04.24 PM.tak'
>>> testtake=NMotive.Take(takename)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IOError: [Errno 2] Take file does not exist.

>>> takename='\\a00519.science.domain\pfk270\Documents\Session 2020-09-04\Take 2020-09-04 01.04.24 PM'
>>> testtake=NMotive.Take(takename)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IOError: [Errno 2] Take file does not exist.

>>> NMotive
<module 'NMotive' (CLS module from NMotive, Version=1.0.5537.27941, Culture=neutral, PublicKeyToken=42f29766e5de17f3)>
>>> NMotive.Take
<type 'Take'>
>>> takename='\\a00519.science.domain\pfk270\Documents\Session 2020-09-04\Take 2020-09-04 01.04.24 PM'
>>> sys.path.append(''\\a00519.science.domain\pfk270\Documents\Session 2020-09-04\'
  File "<stdin>", line 1
    sys.path.append(''\\a00519.science.domain\pfk270\Documents\Session 2020-09-04\'

                      ^
SyntaxError: unexpected token '\'

>>> sys.path.append(''\\a00519.science.domain\pfk270\Documents\Session 2020-09-04\')
  File "<stdin>", line 1
    sys.path.append(''\\a00519.science.domain\pfk270\Documents\Session 2020-09-04\')

                      ^
SyntaxError: unexpected token '\'

>>> sys.path.append(''\a00519.science.domain\pfk270\Documents\Session 2020-09-04\')
  File "<stdin>", line 1
    sys.path.append(''\a00519.science.domain\pfk270\Documents\Session 2020-09-04\')

                      ^
SyntaxError: unexpected token '\'

>>> sys.path.append('a00519.science.domain\pfk270\Documents\Session 2020-09-04\')
  File "<stdin>", line 1
    sys.path.append('a00519.science.domain\pfk270\Documents\Session 2020-09-04\')

                    ^
SyntaxError: EOL while scanning single-quoted string

>>> sys.path.append('\a00519.science.domain\pfk270\Documents\Session 2020-09-04\')
  File "<stdin>", line 1
    sys.path.append('\a00519.science.domain\pfk270\Documents\Session 2020-09-04\')

                    ^
SyntaxError: EOL while scanning single-quoted string

>>> sys.path.append('\\a00519.science.domain\pfk270\Documents\Session 2020-09-04\')
  File "<stdin>", line 1
    sys.path.append('\\a00519.science.domain\pfk270\Documents\Session 2020-09-04\')

                    ^
SyntaxError: EOL while scanning single-quoted string

>>> sys.path.append('C:\pythonscriptsmotive')
>>> takename='Take 2020-09-04 01.04.24 PM.tak'
>>> testtake=NMotive.Take(takename)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IOError: [Errno 2] Take file does not exist.

>>> exporter=NMotive.CSVExporter()
>>> exporter=NMotive.CSVExporter()
>>> exporter
<NMotive.CSVExporter object at 0x000000000000006C [NMotive.CSVExporter]>
>>> NMotive.Take
<type 'Take'>
>>> sys.path
['.', 'C:\\Program Files (x86)\\IronPython 2.7\\Lib', 'C:\\Program Files (x86)\\IronPython 2.7\\DLLs', 'C:\\Program Files (x86)\\IronPython 2.7', 'C:\\Program Files (x86)\\IronPython 2.7\\lib\\site-packages', 'C:\\Program Files (x86)\\OptiTrack\\Motive\\assemblies\\win32', 'C:\\pythonscriptsmotive']
>>> takename='test.tak'
>>> if not path.split(takename)[0]:
... takename = path.join('.', takename)
  File "<stdin>", line 2
    takename = path.join('.', takename)

    ^
IndentationError: expected an indented block

>>>     takename = path.join('.', takename)
  File "<stdin>", line 1
        takename = path.join('.', takename)

    ^
SyntaxError: invalid syntax

>>> if not path.splot(takename)[0]
  File "<stdin>", line 1
    if not path.splot(takename)[0]

                                  ^
SyntaxError: unexpected token '<newline>'

>>> if not path.split(takename)[0]
  File "<stdin>", line 1
    if not path.split(takename)[0]

                                  ^
SyntaxError: unexpected token '<newline>'

>>> if not path.split(takename)[0]:
...     takename=path.join('.',takename)
...
>>> takename
'.\\test.tak'
>>> test=NMotive.Take(takename)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IOError: [Errno 2] Take file does not exist.

>>> path.exists(takename)
False
>>> cd 'C:\pythonscriptsmotive'
  File "<stdin>", line 1
    cd 'C:\pythonscriptsmotive'

       ^
SyntaxError: invalid syntax

>>> cd C:\pythonscriptsmotive
  File "<stdin>", line 1
    cd C:\pythonscriptsmotive

       ^
SyntaxError: unexpected token 'C'

>>> cd r'C:\pythonscriptsmotive'
  File "<stdin>", line 1
    cd r'C:\pythonscriptsmotive'

       ^
SyntaxError: invalid syntax

>>> File.Exists('test.tak')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'File' is not defined

>>> Directory.SetCurrentDirectory('C:\pythonscriptsmotive')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'Directory' is not defined

>>> from System.IO import Directory, Path
>>> Directory.SetCurrentDirectory('C:\pythonscriptsmotive')
>>> Directory.GetCurrentDirectory
<built-in function GetCurrentDirectory>
>>> Directory.GetCurrentDirectory()
'C:\\pythonscriptsmotive'
>>> test=NMotive.Take(takename9
...
...
... )
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'takename9' is not defined

>>> test=NMotive.Take(takename)
>>> test
<NMotive.Take object at 0x000000000000006D [NMotive.Take]>
>>> test.fname
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'Take' object has no attribute 'fname'

>>> dir(test)
['DProps', 'DataType', 'Dispose', 'DynamicProperties', 'Equals', 'FileName', 'FindProp', 'FrameRate', 'FrameTime', 'FullFrameRange', 'FullTimeRange', 'GetHashCode', 'GetType', 'HasData', 'HasGaps', 'ID', 'IsSelected', 'Item', 'MemberwiseClone', 'Name', 'Notes', 'OnPropertyChanged', 'PropertyChanged', 'ReferenceEquals', 'Save', 'SessionID', 'ToString', 'UpdatePropDelegate', 'UpdatePropFunc', '_IsSelected', '__class__', '__delattr__', '__doc__', '__enter__', '__exit__', '__format__', '__getattribute__', '__getitem__', '__hash__', '__init__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'dynamicProps', 'raise_PropertyChanged']
>>> test.DataType
<type 'DataType'>
>>> test.DataType()
NMotive.Take+DataType.None
>>> test.FileName()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: str is not callable

>>> test.FileName
'./test.tak'
>>> test.HasData()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: HasData() takes exactly 1 argument (0 given)

>>> test.HasData
<built-in method HasData of Take object at 0x000000000000006D>
>>> test.FrameRate
100.0
>>> fname='csvtestpleasework.csv'
>>> exporter=NMotive.CSVExporter()
>>> exporter.Export(test,fname,True)
<NMotive.Result object at 0x000000000000006E [NMotive.Result]>
>>> import glob
>>> glob
<module 'glob' from 'C:\Program Files (x86)\IronPython 2.7\Lib\glob.py'>
>>> glob.glob('.')
['.']
>>> glob.glob('./*')
['.\\csvtestpleasework.csv', '.\\test.tak']
>>> glob.glob('./*.tak')
['.\\test.tak']
>>> files=glob.glob('./*.tak')
>>> files
['.\\test.tak']
>>> for file in files
  File "<stdin>", line 1
    for file in files

                     ^
SyntaxError: unexpected token '<newline>'

>>> for file in files:
...     print file
...
.\test.tak
>>> for file in files:
...     print(file)
...
.\test.tak
>>>